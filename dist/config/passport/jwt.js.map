{"version":3,"sources":["../../../src/config/passport/jwt.js"],"names":["Strategy","passportJWT","cookieExtractor","token","ctx","cookies","get","options","secretOrKey","config","jwtSecret","jwtFromRequest","jwtStrategy","payload","done","User","findByEmail","email","user","Error"],"mappings":";;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,WAAaC,sBAAYD,QAA/B;;AAEA,IAAME,kBAAkB,SAAlBA,eAAkB,MAAO;AAC3B,QAAIC,QAAQ,IAAZ;;AAEA,QAAIC,OAAOA,IAAIC,OAAf,EACA;AACIF,gBAAQC,IAAIC,OAAJ,CAAYC,GAAZ,CAAgB,aAAhB,CAAR;AACH;AACD,WAAOH,KAAP;AACH,CARD;;AAUA,IAAII,UAAU;AACVC,iBAAaC,WAAOC,SADV;AAEVC,oBAAgBT;AAFN,CAAd;;AAMA,IAAMU,cAAc,IAAIZ,QAAJ,CAAaO,OAAb;AAAA,wFAAsB,iBAAOM,OAAP,EAAgBC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACtC;AADsC;AAAA,+BAEnBC,eAAKC,WAAL,CAAiBH,QAAQI,KAAzB,CAFmB;;AAAA;AAEhCC,4BAFgC;;AAAA,4BAIlCA,IAJkC;AAAA;AAAA;AAAA;;AAAA,yDAK3BJ,KAAK,IAAIK,KAAJ,CAAU,gBAAV,CAAL,EAAkC,IAAlC,CAL2B;;AAAA;AAAA,yDAQ/BL,KAAK,IAAL,EAAWI,IAAX,CAR+B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAtB;;AAAA;AAAA;AAAA;AAAA,IAApB;;kBAYeN,W","file":"jwt.js","sourcesContent":["import passportJWT from 'passport-jwt';\nimport User from 'db/models/User';\nimport config from 'config';\n\nconst Strategy   = passportJWT.Strategy;\n\nconst cookieExtractor = ctx => {\n    let token = null;\n\n    if (ctx && ctx.cookies)\n    {\n        token = ctx.cookies.get('accessToken');\n    }\n    return token;\n};\n\nlet options = {  \n    secretOrKey: config.jwtSecret,\n    jwtFromRequest: cookieExtractor\n};\n\n\nconst jwtStrategy = new Strategy(options, async (payload, done) => {\n    debugger;\n    const user = await User.findByEmail(payload.email);\n\n    if(!user){\n        return done(new Error(\"User not found\"), null);\n    }\n\n    return done(null, user);\n\n});\n\nexport default jwtStrategy;"]}